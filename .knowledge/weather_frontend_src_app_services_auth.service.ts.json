{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service named AuthService that manages user authentication state using signals. It provides methods for getting the current user, logging in, and logging out, with placeholders for backend integration.", "external_files": ["@angular/core"], "external_methods": ["Injectable", "signal"], "published": ["AuthService"], "classes": [{"name": "AuthService", "description": "An Angular service that manages authentication state with methods to get user info, login, and logout."}], "methods": [{"name": "user", "description": "Returns the current authenticated user object or null."}, {"name": "login", "description": "Simulates user login by setting a demo user object; intended to call backend auth later."}, {"name": "logout", "description": "Resets the user state to null, representing logout."}], "calls": ["this._user()", "this._user.set({ id: 'demo', email })", "this._user.set(null)"], "search-terms": ["AuthService", "Angular auth service", "signal-based user management", "auth placeholder method", "TypeScript Angular service"], "state": 2, "file_id": 50, "knowledge_revision": 128, "git_revision": "", "ctags": [{"_type": "tag", "name": "AuthService", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/auth.service.ts", "pattern": "/^export class AuthService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "_user", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/auth.service.ts", "pattern": "/^  private _user = signal<{ id: string; email: string } | null>(null);$/", "language": "TypeScript", "kind": "property", "scope": "AuthService", "scopeKind": "class"}], "hash": "ea0a68a246a3335b31927294da4e6321", "format-version": 4, "code-base-name": "weather_frontend", "filename": "weather_frontend/src/app/services/auth.service.ts", "fields": [{"name": "private _user = signal<{ id: string; email: string } | null>(null);", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"128": ""}]}