{"is_source_file": true, "format": "TypeScript", "description": "Defines an Angular standalone component 'WeatherGridComponent' responsible for displaying weather data for a specified city, managing loading states, handling errors, and fetching data via a weather service.", "external_files": ["../../services/weather.service", "../weather-card/weather-card.component.html"], "external_methods": ["WeatherService.searchCity"], "published": ["WeatherGridComponent"], "classes": [{"name": "WeatherGridComponent", "description": "An Angular component that displays weather information in a grid, fetches data when the city input changes, and manages UI states such as loading and errors."}], "methods": [{"name": "ngOnChanges", "description": "Lifecycle hook that triggers whenever input properties change; initiates weather data fetch if the city input is valid."}, {"name": "fetch", "description": "Asynchronous method that calls the WeatherService to fetch weather data for the specified city, and manages loading and error states."}], "calls": ["this.weather.searchCity"], "search-terms": ["WeatherGridComponent", "Angular component", "Weather service", "async fetch weather", "city input change"], "state": 2, "file_id": 39, "knowledge_revision": 158, "git_revision": "9dbe8b47b3dcf08adf1d7e677d6e926885531973", "revision_history": [{"110": ""}, {"158": "9dbe8b47b3dcf08adf1d7e677d6e926885531973"}], "ctags": [{"_type": "tag", "name": "WeatherGridComponent", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/components/weather-grid/weather-grid.component.ts", "pattern": "/^export class WeatherGridComponent implements OnChanges {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "city", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/components/weather-grid/weather-grid.component.ts", "pattern": "/^  @Input() city: string | null = null;$/", "language": "TypeScript", "kind": "property", "scope": "WeatherGridComponent", "scopeKind": "class"}, {"_type": "tag", "name": "loading", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/components/weather-grid/weather-grid.component.ts", "pattern": "/^  loading = signal(false);$/", "language": "TypeScript", "kind": "property", "scope": "WeatherGridComponent", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/components/weather-grid/weather-grid.component.ts", "pattern": "/^      const res = await this.weather.searchCity(q);$/", "language": "TypeScript", "kind": "constant"}], "hash": "3e5fbc2f70f73b5c2f61fc3d008178b5", "format-version": 4, "code-base-name": "weather_frontend", "filename": "weather_frontend/src/app/components/weather-grid/weather-grid.component.ts", "fields": [{"name": "@Input() city: string | null = null;", "scope": "WeatherGridComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "loading = signal(false);", "scope": "WeatherGridComponent", "scopeKind": "class", "description": "unavailable"}]}