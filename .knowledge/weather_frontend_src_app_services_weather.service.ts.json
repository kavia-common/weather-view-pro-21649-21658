{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service called WeatherService that interacts with a backend weather API to fetch weather data for a specified city. It includes an interface for the weather data structure and a method to perform the API call and map the response to this interface.", "external_files": ["@angular/core", "@angular/common/http", "rxjs"], "external_methods": ["firstValueFrom", "HttpClient.get", "HttpParams.set"], "published": ["WeatherService", "WeatherResult"], "classes": [{"name": "WeatherService", "description": "An Angular injectable service that provides a method to fetch weather data from a backend API."}], "methods": [{"name": "async searchCity(city: string): Promise<WeatherResult | null> { searchCity", "description": "An asynchronous method that queries the weather API for a specified city and returns a WeatherResult object or null.", "scope": "WeatherService", "scopeKind": "class"}, {"name": "constructor(private http: HttpClient) {} constructor", "scope": "WeatherService", "scopeKind": "class", "description": "unavailable"}], "calls": ["this.http.get"], "search-terms": ["WeatherService", "searchCity", "WeatherResult", "Angular", "API client"], "state": 2, "file_id": 48, "knowledge_revision": 126, "git_revision": "", "ctags": [{"_type": "tag", "name": "WeatherResult", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^export interface WeatherResult {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "WeatherService", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^export class WeatherService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "city", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^  city: string;$/", "language": "TypeScript", "kind": "property", "scope": "WeatherResult", "scopeKind": "interface"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^  constructor(private http: HttpClient) {}$/", "language": "TypeScript", "kind": "method", "scope": "WeatherService", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^  description: string;$/", "language": "TypeScript", "kind": "property", "scope": "WeatherResult", "scopeKind": "interface"}, {"_type": "tag", "name": "feels_like", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^  feels_like: number;$/", "language": "TypeScript", "kind": "property", "scope": "WeatherResult", "scopeKind": "interface"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^  constructor(private http: HttpClient) {}$/", "language": "TypeScript", "kind": "property", "scope": "WeatherService", "scopeKind": "class"}, {"_type": "tag", "name": "humidity", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^  humidity: number;$/", "language": "TypeScript", "kind": "property", "scope": "WeatherResult", "scopeKind": "interface"}, {"_type": "tag", "name": "params", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^    const params = new HttpParams().set('q', city);$/", "language": "TypeScript", "kind": "constant", "scope": "WeatherService.searchCity", "scopeKind": "method"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^    const res: any = await firstValueFrom(this.http.get(url, { params }));$/", "language": "TypeScript", "kind": "constant", "scope": "WeatherService.searchCity", "scopeKind": "method"}, {"_type": "tag", "name": "searchCity", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^  async searchCity(city: string): Promise<WeatherResult | null> {$/", "language": "TypeScript", "kind": "method", "scope": "WeatherService", "scopeKind": "class"}, {"_type": "tag", "name": "temp", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^  temp: number;$/", "language": "TypeScript", "kind": "property", "scope": "WeatherResult", "scopeKind": "interface"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^    const url = '\\/api\\/weather';$/", "language": "TypeScript", "kind": "constant", "scope": "WeatherService.searchCity", "scopeKind": "method"}, {"_type": "tag", "name": "wind", "path": "/home/kavia/workspace/code-generation/weather-view-pro-21649-21658/weather_frontend/src/app/services/weather.service.ts", "pattern": "/^  wind: number;$/", "language": "TypeScript", "kind": "property", "scope": "WeatherResult", "scopeKind": "interface"}], "hash": "3360c4141687c95ce82a08dcbb61c993", "format-version": 4, "code-base-name": "weather_frontend", "filename": "weather_frontend/src/app/services/weather.service.ts", "fields": [{"name": "export interface WeatherResult {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "city: string;", "scope": "WeatherResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "description: string;", "scope": "WeatherResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "feels_like: number;", "scope": "WeatherResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "constructor(private http: HttpClient) {}", "scope": "WeatherService", "scopeKind": "class", "description": "unavailable"}, {"name": "humidity: number;", "scope": "WeatherResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "temp: number;", "scope": "WeatherResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "wind: number;", "scope": "WeatherResult", "scopeKind": "interface", "description": "unavailable"}], "revision_history": [{"126": ""}]}